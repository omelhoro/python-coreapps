// Generated by CoffeeScript 1.7.1
var $, ex11;

$ = jQuery;

ex11 = ex14;

$(function() {
  var Login, User;
  User = (function() {
    function User(name) {
      this.name = name;
      this.TAB = $("#tab");
      this._present_table();
      this._menu_handlers();
      this.st_selected = [];
    }

    User.prototype._present_table = function() {
      return ex11.get_tab_for_user(this.name, (function(_this) {
        return function(res) {
          _this.TAB.children().remove();
          _this.TAB.append($(res));
          return $("tr").click(function(e) {
            var cur_row;
            cur_row = $(e.currentTarget);
            return cur_row.toggleClass("selected");
          });
        };
      })(this));
    };

    User.prototype._select = function() {
      $("tr.selected").each((function(_this) {
        return function(i, e) {
          var $childs, nm, qua;
          console.log(e, $("tr.selected"));
          $childs = $(e).children();
          nm = $($childs[2]).text();
          qua = $($childs[3]).text();
          return _this.st_selected.push([nm, qua]);
        };
      })(this));
      return this.st_selected;
    };

    User.prototype._menu_handlers = function() {
      $("#menu > button").unbind();
      return $("#menu > button").click((function(_this) {
        return function(e) {
          var sym, _i, _j, _len, _len1, _ref, _ref1;
          switch ($(e.target).prop("id")) {
            case "update":
              ex11.update_price("foo");
              _this._present_table();
              break;
            case "buyone":
              _ref = _this._select();
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                sym = _ref[_i];
                ex11.modify({
                  user: _this.name,
                  stsym: sym[0],
                  plus: true,
                  curqua: sym[1]
                });
              }
              _this._present_table();
              break;
            case "sellone":
              _ref1 = _this._select();
              for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
                sym = _ref1[_j];
                if (parseInt(sym[1]) > 0) {
                  ex11.modify({
                    user: _this.name,
                    stsym: sym[0],
                    plus: false,
                    curqua: sym[1]
                  });
                }
              }
              _this._present_table();
              break;
            case "logout":
              $("#user").children().remove();
              $("div#login").show();
              new Login();
          }
          return _this.st_selected = [];
        };
      })(this));
    };

    return User;

  })();
  Login = (function() {
    function Login() {
      this.usern = this.passw = this.submit = null;
      this._present_login();
      this._check_login();
      this.submit.click();
    }

    Login.prototype._add_menu = function() {
      var div, format_menu, k, menu, tab, v, _results;
      div = $("<div id='menu'></div>");
      tab = $("<div id='tab'></div>");
      $("#user").append(tab).append(div);
      menu = {
        "update": "Price update",
        "buyone": "Buy one",
        "sellone": "Sell one",
        "logout": "Log out"
      };
      format_menu = function(k, v) {
        return "<button id=" + k + ">" + v + "</button>";
      };
      _results = [];
      for (k in menu) {
        v = menu[k];
        _results.push($("#menu").append(format_menu(k, v)));
      }
      return _results;
    };

    Login.prototype._check_login = function() {
      return $("#submit").click((function(_this) {
        return function() {
          var passw, usern;
          usern = _this.usern.val();
          passw = _this.passw.val();
          return ex11.login({
            "usern": usern,
            "passw": passw
          }, function(res) {
            console.log(res, usern);
            if (res) {
              $("div#login").hide();
              _this.usern.remove();
              _this.passw.remove();
              _this.submit.remove();
              _this._add_menu();
              return new User(usern);
            } else {
              _this.usern.css("backgroundColor", "red");
              return _this.passw.css("backgroundColor", "red");
            }
          });
        };
      })(this));
    };

    Login.prototype._present_login = function() {
      this.usern = $("<input value='Igor' id='usern'/>");
      this.passw = $("<input value='Igor' type='password' id='passw'/>");
      this.submit = $("<button id='submit'>Submit</button>");
      return $("#login").append(this.usern).append(this.passw).append(this.submit);
    };

    return Login;

  })();
  return new Login();
});
